'use strict';

export default [
  '# Input',
  'This is `input` tag with using `validator` to check value. The most important thing is that you must install [validator](https://github.com/chriso/validator.js/).',
  '',
  '#### Props',
  '- `type`: This can be all type of `input`, and it can be `textarea`.',
  '- `rules(required)`: This is an array of `validator` and `message`.',
  '  - `validator(required)`: Use to check value. You can use function from `validator` with giving a name or write a function to check value. The parameters of function are `value` and `event`. This function need to return `true` or `false` to show if value is correct.',
  '  - `message(required)`: This message will be pushed to `error` when value is incorrect.',
  '- `onChange`: This function will be called when value is changed.',
  '- `onBlur`: This function will be called when input is not focus.',
  '- `value`: Give `input` a value. If this is set, you must write `onChange` function.',
  '',
  'The information of checking value will be given to `onChange` and `onBlur` as parameters. There will be an object and `event`. Object has `value`, `isError` and `error`.',
  '- `value`: This is a value of this `input`.',
  '- `isError`: This will be `false`, when `value` passes all test.',
  '- `error`: Messages will be pushed in `error` if `value` does not pass the test.',
  '',
  '#### Example',
  '```js',
  '\'use strict\';',
  '',
  'import React from \'react\';',
  'import Input from \'cat-components/lib/Input\';',
  '',
  'export default class Example extends React.Component {',
  '  constructor(props) {',
  '    super(props);',
  '    this.state = {',
  '      value: \'test@gmail.com\',',
  '      isError: false,',
  '      error: []',
  '    };',
  '',
  '    this.onChange = this.onChange.bind(this);',
  '  }',
  '',
  '  render() {',
  '    const {value, isError, error} = this.state;',
  '',
  '    return (',
  '      <div>',
  '        <Input {...this.props}',
  '               rules={rules}',
  '               value={value}',
  '               onChange={this.onChange}',
  '        />',
  '',
  '        {error.map((err, index) => {',
  '          return (',
  '            <p key={index}',
  '               style={style.error}',
  '            >{err}</p>',
  '          );',
  '        })}',
  '      </div>',
  '    );',
  '  }',
  '',
  '  onChange(data) {',
  '    this.setState(data);',
  '  }',
  '}',
  '```'
];
